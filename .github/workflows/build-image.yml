# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: build-n-push

on:
  # push:
  #   tags:
  #     - "v*.*.*"
  #   branches:
  #     - test
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_BUILDX_PLATFORMS: linux/amd64,linux/arm64,darwin/amd64,darwin/arm64,windows/amd64

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # https://github.com/marketplace/actions/docker-login
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Make tests
      - name: Run tests
        run: |
          echo "Run tests"
          make test

      # Build and push Docker image
      - name: Build and push
        env:
          APP: "kbot"
          REGISTRY: ${{ env.REGISTRY }}
        run: |
          echo "Build and push"
          make docker-build
          make docker-push

  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set the version
        run: |
          echo "Checkout repository"
          echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" \
          >> $GITHUB_ENV

      - name: Update Helm chart
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag=strenv(VERSION)' helm/values.yaml

      - name: Backmerge to main
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "update version $VERSION"
          git push origin HEAD:main
